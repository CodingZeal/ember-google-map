eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/components/google-map.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/components\');\n    test(\'ember-cli-qunit/components/google-map.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/components/google-map.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/components/google-map.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/controllers/info-window.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/controllers\');\n    test(\'ember-cli-qunit/controllers/info-window.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/controllers/info-window.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/controllers/info-window.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/controllers/marker.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/controllers\');\n    test(\'ember-cli-qunit/controllers/marker.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/controllers/marker.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/controllers/marker.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/core/google-object-event.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/core\');\n    test(\'ember-cli-qunit/core/google-object-event.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/core/google-object-event.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/core/google-object-event.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/core/google-object-property.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/core\');\n    test(\'ember-cli-qunit/core/google-object-property.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/core/google-object-property.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/core/google-object-property.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/core/helpers.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/core\');\n    test(\'ember-cli-qunit/core/helpers.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/core/helpers.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/core/helpers.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/initializers/google-map-component.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/initializers\');\n    test(\'ember-cli-qunit/initializers/google-map-component.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/initializers/google-map-component.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/initializers/google-map-component.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/mixins/google-object.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/mixins\');\n    test(\'ember-cli-qunit/mixins/google-object.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/mixins/google-object.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/mixins/google-object.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/views/info-window.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/views\');\n    test(\'ember-cli-qunit/views/info-window.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/views/info-window.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/views/info-window.jshint.js");

;eval("define(\"dummy/Ember CLI QUnit/tests/ember-cli-qunit/views/marker.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-qunit/views\');\n    test(\'ember-cli-qunit/views/marker.js should pass jshint\', function() { \n      ok(true, \'ember-cli-qunit/views/marker.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/Ember CLI QUnit/tests/ember-cli-qunit/views/marker.jshint.js");

;eval("define(\"dummy/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=dummy/app.js");

;eval("define(\"dummy/components/google-map\", \n  [\"google-map/components/google-map\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /**\n     * Created by huafu on 10/23/14.\n     */\n    var GoogleMapComponent = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = GoogleMapComponent;\n  });//# sourceURL=dummy/components/google-map.js");

;eval("define(\"dummy/controllers/application\", \n  [\"ember\",\"google-map/components/google-map\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var MAP_TYPES = __dependency2__.MAP_TYPES;\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n      lat:         0,\n      lng:         0,\n      zoom:        5,\n      type:        \'road\',\n      mapTypes:    MAP_TYPES,\n      markers:     [\n        {title: \'one\', lat: 5, lng: 5, description: \'hello 1\', isDraggable: true},\n        {title: \'two\', lat: 5, lng: 0, hasInfoWindow: false},\n        {title: \'three\', lat: 0, lng: 5, infoWindowTemplateName: \'marker-info-window\', helloWorld: \'Hello World!\'}\n      ],\n      infoWindows: [\n        {title: \'some info window\', lat: -5, lng: -5, description: \'hello everybody!\'}\n      ],\n\n      actions: {\n        addMarker:        function () {\n          this.get(\'markers\').addObject({title: \'new\', lat: 0, lng: 0, isDraggable: true});\n        },\n        removeMarker:     function (marker) {\n          this.get(\'markers\').removeObject(marker);\n        },\n        addInfoWindow:    function () {\n          this.get(\'infoWindows\').addObject({title: \'new iw\', description: \'hello\', lat: -5, lng: 0});\n        },\n        removeInfoWindow: function (marker) {\n          this.get(\'infoWindows\').removeObject(marker);\n        }\n      }\n    });\n  });//# sourceURL=dummy/controllers/application.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/components/google-map.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/components\');\n    test(\'ember-cli-content-security-policy/components/google-map.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/components/google-map.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/components/google-map.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/controllers/info-window.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/controllers\');\n    test(\'ember-cli-content-security-policy/controllers/info-window.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/controllers/info-window.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/controllers/info-window.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/controllers/marker.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/controllers\');\n    test(\'ember-cli-content-security-policy/controllers/marker.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/controllers/marker.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/controllers/marker.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/core/google-object-event.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/core\');\n    test(\'ember-cli-content-security-policy/core/google-object-event.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/core/google-object-event.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/core/google-object-event.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/core/google-object-property.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/core\');\n    test(\'ember-cli-content-security-policy/core/google-object-property.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/core/google-object-property.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/core/google-object-property.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/core/helpers.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/core\');\n    test(\'ember-cli-content-security-policy/core/helpers.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/core/helpers.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/core/helpers.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/initializers/google-map-component.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/initializers\');\n    test(\'ember-cli-content-security-policy/initializers/google-map-component.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/initializers/google-map-component.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/initializers/google-map-component.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/mixins/google-object.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/mixins\');\n    test(\'ember-cli-content-security-policy/mixins/google-object.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/mixins/google-object.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/mixins/google-object.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/views/info-window.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/views\');\n    test(\'ember-cli-content-security-policy/views/info-window.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/views/info-window.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/views/info-window.jshint.js");

;eval("define(\"dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/views/marker.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-cli-content-security-policy/views\');\n    test(\'ember-cli-content-security-policy/views/marker.js should pass jshint\', function() { \n      ok(true, \'ember-cli-content-security-policy/views/marker.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-cli-content-security-policy/tests/ember-cli-content-security-policy/views/marker.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/components/google-map.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/components\');\n    test(\'ember-data/components/google-map.js should pass jshint\', function() { \n      ok(true, \'ember-data/components/google-map.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/components/google-map.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/controllers/info-window.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/controllers\');\n    test(\'ember-data/controllers/info-window.js should pass jshint\', function() { \n      ok(true, \'ember-data/controllers/info-window.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/controllers/info-window.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/controllers/marker.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/controllers\');\n    test(\'ember-data/controllers/marker.js should pass jshint\', function() { \n      ok(true, \'ember-data/controllers/marker.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/controllers/marker.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/core/google-object-event.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/core\');\n    test(\'ember-data/core/google-object-event.js should pass jshint\', function() { \n      ok(true, \'ember-data/core/google-object-event.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/core/google-object-event.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/core/google-object-property.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/core\');\n    test(\'ember-data/core/google-object-property.js should pass jshint\', function() { \n      ok(true, \'ember-data/core/google-object-property.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/core/google-object-property.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/core/helpers.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/core\');\n    test(\'ember-data/core/helpers.js should pass jshint\', function() { \n      ok(true, \'ember-data/core/helpers.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/core/helpers.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/initializers/google-map-component.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/initializers\');\n    test(\'ember-data/initializers/google-map-component.js should pass jshint\', function() { \n      ok(true, \'ember-data/initializers/google-map-component.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/initializers/google-map-component.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/mixins/google-object.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/mixins\');\n    test(\'ember-data/mixins/google-object.js should pass jshint\', function() { \n      ok(true, \'ember-data/mixins/google-object.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/mixins/google-object.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/views/info-window.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/views\');\n    test(\'ember-data/views/info-window.js should pass jshint\', function() { \n      ok(true, \'ember-data/views/info-window.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/views/info-window.jshint.js");

;eval("define(\"dummy/ember-data/tests/ember-data/views/marker.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-data/views\');\n    test(\'ember-data/views/marker.js should pass jshint\', function() { \n      ok(true, \'ember-data/views/marker.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/ember-data/tests/ember-data/views/marker.jshint.js");

;eval("define(\"dummy/google-map/tests/google-map/components/google-map.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - google-map/components\');\n    test(\'google-map/components/google-map.js should pass jshint\', function() { \n      ok(true, \'google-map/components/google-map.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/google-map/tests/google-map/components/google-map.jshint.js");

;eval("define(\"dummy/google-map/tests/google-map/controllers/info-window.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - google-map/controllers\');\n    test(\'google-map/controllers/info-window.js should pass jshint\', function() { \n      ok(true, \'google-map/controllers/info-window.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/google-map/tests/google-map/controllers/info-window.jshint.js");

;eval("define(\"dummy/google-map/tests/google-map/controllers/marker.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - google-map/controllers\');\n    test(\'google-map/controllers/marker.js should pass jshint\', function() { \n      ok(true, \'google-map/controllers/marker.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/google-map/tests/google-map/controllers/marker.jshint.js");

;eval("define(\"dummy/google-map/tests/google-map/core/google-object-event.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - google-map/core\');\n    test(\'google-map/core/google-object-event.js should pass jshint\', function() { \n      ok(true, \'google-map/core/google-object-event.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/google-map/tests/google-map/core/google-object-event.jshint.js");

;eval("define(\"dummy/google-map/tests/google-map/core/google-object-property.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - google-map/core\');\n    test(\'google-map/core/google-object-property.js should pass jshint\', function() { \n      ok(true, \'google-map/core/google-object-property.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/google-map/tests/google-map/core/google-object-property.jshint.js");

;eval("define(\"dummy/google-map/tests/google-map/core/helpers.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - google-map/core\');\n    test(\'google-map/core/helpers.js should pass jshint\', function() { \n      ok(true, \'google-map/core/helpers.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/google-map/tests/google-map/core/helpers.jshint.js");

;eval("define(\"dummy/google-map/tests/google-map/initializers/google-map-component.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - google-map/initializers\');\n    test(\'google-map/initializers/google-map-component.js should pass jshint\', function() { \n      ok(true, \'google-map/initializers/google-map-component.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/google-map/tests/google-map/initializers/google-map-component.jshint.js");

;eval("define(\"dummy/google-map/tests/google-map/mixins/google-object.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - google-map/mixins\');\n    test(\'google-map/mixins/google-object.js should pass jshint\', function() { \n      ok(true, \'google-map/mixins/google-object.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/google-map/tests/google-map/mixins/google-object.jshint.js");

;eval("define(\"dummy/google-map/tests/google-map/views/info-window.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - google-map/views\');\n    test(\'google-map/views/info-window.js should pass jshint\', function() { \n      ok(true, \'google-map/views/info-window.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/google-map/tests/google-map/views/info-window.jshint.js");

;eval("define(\"dummy/google-map/tests/google-map/views/marker.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - google-map/views\');\n    test(\'google-map/views/marker.js should pass jshint\', function() { \n      ok(true, \'google-map/views/marker.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/google-map/tests/google-map/views/marker.jshint.js");

;eval("define(\"dummy/initializers/google-map-component\", \n  [\"google-map/initializers/google-map-component\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var GoogleMapComponentInitializer = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = GoogleMapComponentInitializer;\n  });//# sourceURL=dummy/initializers/google-map-component.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/components/google-map.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/components\');\n    test(\'live-reload-middleware/components/google-map.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/components/google-map.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/components/google-map.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/controllers/info-window.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/controllers\');\n    test(\'live-reload-middleware/controllers/info-window.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/controllers/info-window.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/controllers/info-window.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/controllers/marker.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/controllers\');\n    test(\'live-reload-middleware/controllers/marker.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/controllers/marker.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/controllers/marker.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/core/google-object-event.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/core\');\n    test(\'live-reload-middleware/core/google-object-event.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/core/google-object-event.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/core/google-object-event.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/core/google-object-property.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/core\');\n    test(\'live-reload-middleware/core/google-object-property.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/core/google-object-property.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/core/google-object-property.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/core/helpers.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/core\');\n    test(\'live-reload-middleware/core/helpers.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/core/helpers.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/core/helpers.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/initializers/google-map-component.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/initializers\');\n    test(\'live-reload-middleware/initializers/google-map-component.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/initializers/google-map-component.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/initializers/google-map-component.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/mixins/google-object.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/mixins\');\n    test(\'live-reload-middleware/mixins/google-object.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/mixins/google-object.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/mixins/google-object.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/views/info-window.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/views\');\n    test(\'live-reload-middleware/views/info-window.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/views/info-window.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/views/info-window.jshint.js");

;eval("define(\"dummy/live-reload-middleware/tests/live-reload-middleware/views/marker.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - live-reload-middleware/views\');\n    test(\'live-reload-middleware/views/marker.js should pass jshint\', function() { \n      ok(true, \'live-reload-middleware/views/marker.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/live-reload-middleware/tests/live-reload-middleware/views/marker.jshint.js");

;eval("define(\"dummy/router\", \n  [\"ember\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=dummy/router.js");

;eval("define(\"dummy/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n    <li>\\n      <label>Title: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"title\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</label>\\n      <label>Lat: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"lat\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</label>\\n      <label>Lng: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"lng\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</label>\\n      <label>Is visible: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'checked\': (\"isVisible\")\n      },hashTypes:{\'type\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</label>\\n      <label>Is draggable: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'checked\': (\"isDraggable\")\n      },hashTypes:{\'type\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</label>\\n      <label>Description: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"description\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</label>\\n      <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"removeMarker\", \"\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\">remove</button>\\n    </li>\\n  \");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n    <li>\\n      <label>Title: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"title\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</label>\\n      <label>Description: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"description\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</label>\\n      <label>Lat: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"lat\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</label>\\n      <label>Lng: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"lng\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</label>\\n      <label>Is visible: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'checked\': (\"isVisible\")\n      },hashTypes:{\'type\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</label>\\n      <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"removeInfoWindow\", \"\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\">remove</button>\\n    </li>\\n  \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h1>Dead simple example of using <a href=\\\"https://github.com/huafu/ember-google-map\\\">ember-google-map</a></h1>\\n\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'google-map\'] || (depth0 && depth0[\'google-map\']),options={hash:{\n        \'lat\': (\"lat\"),\n        \'lng\': (\"lng\"),\n        \'type\': (\"type\"),\n        \'zoom\': (\"zoom\"),\n        \'markers\': (\"markers\"),\n        \'infoWindows\': (\"infoWindows\")\n      },hashTypes:{\'lat\': \"ID\",\'lng\': \"ID\",\'type\': \"ID\",\'zoom\': \"ID\",\'markers\': \"ID\",\'infoWindows\': \"ID\"},hashContexts:{\'lat\': depth0,\'lng\': depth0,\'type\': depth0,\'zoom\': depth0,\'markers\': depth0,\'infoWindows\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"google-map\", options))));\n      data.buffer.push(\"\\n\\n<h3>Map settings</h3>\\n<div>\\n  <label>Lat: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"lat\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</label>\\n  <label>Lng: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"lng\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</label>\\n  <label>Zoom: \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"zoom\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"</label>\\n  <label>Type: \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.Select\", {hash:{\n        \'content\': (\"mapTypes\"),\n        \'optionLabelPath\': (\"content.label\"),\n        \'optionValuePath\': (\"content.id\"),\n        \'value\': (\"type\")\n      },hashTypes:{\'content\': \"ID\",\'optionLabelPath\': \"STRING\",\'optionValuePath\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'content\': depth0,\'optionLabelPath\': depth0,\'optionValuePath\': depth0,\'value\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"</label>\\n</div>\\n<h3>Markers</h3>\\n<ul>\\n  \");\n      stack1 = helpers.each.call(depth0, \"markers\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"addMarker\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">add</button>\\n</ul>\\n\\n<h3>Info windows</h3>\\n<ul>\\n  \");\n      stack1 = helpers.each.call(depth0, \"infoWindows\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"addInfoWindow\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">add</button>\\n</ul>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/application.js");

;eval("define(\"dummy/templates/components/google-map\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n      <li>\");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" @ \");\n      stack1 = helpers._triageMustache.call(depth0, \"lat\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\",\");\n      stack1 = helpers._triageMustache.call(depth0, \"lng\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n      \");\n      stack1 = helpers[\'if\'].call(depth0, \"view.hasInfoWindow\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n        \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"google-map/info-window\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"\\n      \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"map-canvas\\\"></div>\\n<div class=\\\"markers\\\" style=\\\"display: none;\\\">\\n  <ul>\\n    \\n    \");\n      stack1 = helpers.each.call(depth0, \"markers\", {hash:{\n        \'itemController\': (\"markerController\"),\n        \'itemView\': (\"google-map/marker\")\n      },hashTypes:{\'itemController\': \"ID\",\'itemView\': \"STRING\"},hashContexts:{\'itemController\': depth0,\'itemView\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </ul>\\n  <ul>\\n    \\n    \");\n      data.buffer.push(escapeExpression(helpers.each.call(depth0, \"infoWindows\", {hash:{\n        \'itemController\': (\"infoWindowController\"),\n        \'itemView\': (\"google-map/info-window\")\n      },hashTypes:{\'itemController\': \"ID\",\'itemView\': \"STRING\"},hashContexts:{\'itemController\': depth0,\'itemView\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n  </ul>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/components/google-map.js");

;eval("define(\"dummy/templates/google-map/info-window\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<h3>\");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h3>\\n\\n<p>\");\n      stack1 = helpers._triageMustache.call(depth0, \"description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/google-map/info-window.js");

;eval("define(\"dummy/templates/marker-info-window\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<h2>I am marker \");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h2>\\n<div>\\n  I have latitude <code>\");\n      stack1 = helpers._triageMustache.call(depth0, \"lat\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</code>\\n  and longitude <code>\");\n      stack1 = helpers._triageMustache.call(depth0, \"lng\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</code>.\\n</div>\\n<h4>\");\n      stack1 = helpers._triageMustache.call(depth0, \"helloWorld\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h4>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=dummy/templates/marker-info-window.js");

;eval("define(\"dummy/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/app.jshint.js");

;eval("define(\"dummy/tests/controllers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/application.js should pass jshint\', function() { \n      ok(true, \'controllers/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/controllers/application.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/helpers\');\n    test(\'dummy/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/helpers/resolver.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/helpers\');\n    test(\'dummy/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/helpers/start-app.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests\');\n    test(\'dummy/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/test-helper.jshint.js");

;eval("define(\"dummy/tests/dummy/tests/unit/initializers/google-map-coponent-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - dummy/tests/unit/initializers\');\n    test(\'dummy/tests/unit/initializers/google-map-coponent-test.js should pass jshint\', function() { \n      ok(true, \'dummy/tests/unit/initializers/google-map-coponent-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/dummy/tests/unit/initializers/google-map-coponent-test.jshint.js");

;eval("define(\"dummy/tests/helpers/resolver\", \n  [\"ember/resolver\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=dummy/tests/helpers/resolver.js");

;eval("define(\"dummy/tests/helpers/start-app\", \n  [\"ember\",\"dummy/app\",\"dummy/router\",\"dummy/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=dummy/tests/helpers/start-app.js");

;eval("define(\"dummy/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=dummy/tests/router.jshint.js");

;eval("define(\"dummy/tests/test-helper\", \n  [\"dummy/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=dummy/tests/test-helper.js");

;eval("define(\"dummy/tests/unit/initializers/google-map-coponent-test\", \n  [\"ember\",\"google-map/initializers/google-map-component\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var initialize = __dependency2__.initialize;\n\n    var container, application;\n\n    module(\'GoogleMapComponentInitializer\', {\n      setup: function() {\n        Ember.run(function() {\n          container = new Ember.Container();\n          application = Ember.Application.create();\n          application.deferReadiness();\n        });\n      }\n    });\n\n    // Replace this with your real tests.\n    test(\'it works\', function() {\n      initialize(container, application);\n\n      // you would normally confirm the results of the initializer here\n      ok(true);\n    });\n  });//# sourceURL=dummy/tests/unit/initializers/google-map-coponent-test.js");

/* jshint ignore:start */

define('dummy/config/environment', ['ember'], function(Ember) {
  var metaName = 'dummy/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
});

if (runningTests) {
  require('dummy/tests/test-helper');
} else {
  require('dummy/app')['default'].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}

/* jshint ignore:end */
